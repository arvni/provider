import{K as V,L as b,N as F,_ as k,o as v,r as p,O as B,q as D,Q as M,m as N,c as $,d as G,f as O,a as _,R as h,s as E,u as L}from"./Modal-784d8689.js";import{r as d,j as U}from"./app-468dc84b.js";const A=V(),q=A,I=["component","direction","spacing","divider","children","className","useFlexGap"],K=b(),Q=q("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root});function W(e){return F({props:e,name:"MuiStack",defaultTheme:K})}function z(e,s){const n=d.Children.toArray(e).filter(Boolean);return n.reduce((c,a,t)=>(c.push(a),t<n.length-1&&c.push(d.cloneElement(s,{key:`separator-${t}`})),c),[])}const H=e=>({row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"})[e],J=({ownerState:e,theme:s})=>{let n=k({display:"flex",flexDirection:"column"},v({theme:s},p({values:e.direction,breakpoints:s.breakpoints.values}),c=>({flexDirection:c})));if(e.spacing){const c=B(s),a=Object.keys(s.breakpoints.values).reduce((o,r)=>((typeof e.spacing=="object"&&e.spacing[r]!=null||typeof e.direction=="object"&&e.direction[r]!=null)&&(o[r]=!0),o),{}),t=p({values:e.direction,base:a}),m=p({values:e.spacing,base:a});typeof t=="object"&&Object.keys(t).forEach((o,r,i)=>{if(!t[o]){const u=r>0?t[i[r-1]]:"column";t[o]=u}}),n=D(n,v({theme:s},m,(o,r)=>e.useFlexGap?{gap:h(c,o)}:{"& > :not(style):not(style)":{margin:0},"& > :not(style) ~ :not(style)":{[`margin${H(r?t[r]:e.direction)}`]:h(c,o)}}))}return n=M(s.breakpoints,n),n};function X(e={}){const{createStyledComponent:s=Q,useThemeProps:n=W,componentName:c="MuiStack"}=e,a=()=>O({root:["root"]},o=>_(c,o),{}),t=s(J);return d.forwardRef(function(o,r){const i=n(o),l=N(i),{component:u="div",direction:S="column",spacing:x=0,divider:y,children:g,className:P,useFlexGap:j=!1}=l,C=$(l,I),R={direction:S,spacing:x,useFlexGap:j},T=a();return U(t,k({as:u,ownerState:R,ref:r,className:G(T.root,P)},C,{children:y?z(g,y):g}))})}const Y=X({createStyledComponent:E("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root}),useThemeProps:e=>L({props:e,name:"MuiStack"})}),ee=Y;export{ee as S};
